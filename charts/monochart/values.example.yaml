replicaCount: null

serviceAccountName: monochart-monochart-default

image:
  repository: nginx
  tag: 1.15.3
  pullPolicy: IfNotPresent
  ## Additional docker pull secrets
  pullSecrets:
    - "docker-secret-1"
    - "docker-secret-2"

configMaps:
  default:
    enabled: true
    mountPath: /config-default
    annotations:
      test.annotation: value
    labels:
      test_label: value
    env:
      CONFIG_ENV_NAME: ENV_VALUE
    files:
      config.test.txt: |-
        some text

secrets:
  default:
    enabled: true
    mountPath: /secret-default
    annotations:
      test.secret.annotation: value
    labels:
      test_label: value
    env:
      SECRET_ENV_NAME: ENV_VALUE
    files:
      secret.test.txt: |-
        some text

# Inline ENV variables
env:
  INLINE_ENV_NAME: ENV_VALUE

# ENV variables from fieldRef.fieldPath
# https://kubernetes.io/docs/tasks/inject-data-application/environment-variable-expose-pod-information/#use-pod-fields-as-values-for-environment-variables
envFromFieldRefFieldPath:
  ENV_1: spec.nodeName

deployment:
  enabled: true
  ## Pods replace strategy
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  # strategy: {}
  ## Pods DNS Config
  ## ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/
  dnsConfig:
    options:
      - name: ndots
        value: "1"
  minReadySeconds: 10
  revisionHistoryLimit: 10
  annotations:
    nginx.version: 1.15.3
  labels:
    component: nginx
  pod:
    annotations: {}
    ## https://github.com/uswitch/kiam
    ## https://github.com/jtblin/kube2iam
    #  iam.amazonaws.com/role: role-arn
    labels: {}
    # use pod lifecycle to configure a preStop hook
    lifecycle:
      preStop:
        exec:
          command: ["sh", "-c", "sleep 60"]
  tolerations:
    - key: "spotinst.io/pool"
      operator: "Equal"
      value: "custom-vng"
      effect: "NoSchedule"
  affinity:
    # use of simple rule
    affinityRule: "ShouldBeOnDifferentNode"
    # use custom affinity rule. Here app MUST be on different host then postgres instance for it
    podAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: app
                operator: NotIn
                values:
                  - postgresql
              - key: release
                operator: NotIn
                values:
                  - "postgresql"
          topologyKey: "kubernetes.io/hostname"

service:
  enabled: true
  type: NodePort
  ports:
    http:
      internal: 8080
      external: 443

ingress:
  default:
    enabled: true
    port: http
    hosts:
      "testme.com": /

crd:
  # IAM Service account
  "v1":
    ServiceAccount:
      default:
        enabled: true
        annotations: {}
